// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.1.0
// - protoc             v3.17.3
// source: primenumber/primenumberpb/primenumber.proto

package primenumberpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PrimeNumberServiceClient is the client API for PrimeNumberService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PrimeNumberServiceClient interface {
	// Server stream
	GetPrimeNumbers(ctx context.Context, in *PrimeNumberRequest, opts ...grpc.CallOption) (PrimeNumberService_GetPrimeNumbersClient, error)
}

type primeNumberServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPrimeNumberServiceClient(cc grpc.ClientConnInterface) PrimeNumberServiceClient {
	return &primeNumberServiceClient{cc}
}

func (c *primeNumberServiceClient) GetPrimeNumbers(ctx context.Context, in *PrimeNumberRequest, opts ...grpc.CallOption) (PrimeNumberService_GetPrimeNumbersClient, error) {
	stream, err := c.cc.NewStream(ctx, &PrimeNumberService_ServiceDesc.Streams[0], "/greet.PrimeNumberService/GetPrimeNumbers", opts...)
	if err != nil {
		return nil, err
	}
	x := &primeNumberServiceGetPrimeNumbersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PrimeNumberService_GetPrimeNumbersClient interface {
	Recv() (*PrimeNumberResponse, error)
	grpc.ClientStream
}

type primeNumberServiceGetPrimeNumbersClient struct {
	grpc.ClientStream
}

func (x *primeNumberServiceGetPrimeNumbersClient) Recv() (*PrimeNumberResponse, error) {
	m := new(PrimeNumberResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PrimeNumberServiceServer is the server API for PrimeNumberService service.
// All implementations must embed UnimplementedPrimeNumberServiceServer
// for forward compatibility
type PrimeNumberServiceServer interface {
	// Server stream
	GetPrimeNumbers(*PrimeNumberRequest, PrimeNumberService_GetPrimeNumbersServer) error
	mustEmbedUnimplementedPrimeNumberServiceServer()
}

// UnimplementedPrimeNumberServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPrimeNumberServiceServer struct {
}

func (UnimplementedPrimeNumberServiceServer) GetPrimeNumbers(*PrimeNumberRequest, PrimeNumberService_GetPrimeNumbersServer) error {
	return status.Errorf(codes.Unimplemented, "method GetPrimeNumbers not implemented")
}
func (UnimplementedPrimeNumberServiceServer) mustEmbedUnimplementedPrimeNumberServiceServer() {}

// UnsafePrimeNumberServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PrimeNumberServiceServer will
// result in compilation errors.
type UnsafePrimeNumberServiceServer interface {
	mustEmbedUnimplementedPrimeNumberServiceServer()
}

func RegisterPrimeNumberServiceServer(s grpc.ServiceRegistrar, srv PrimeNumberServiceServer) {
	s.RegisterService(&PrimeNumberService_ServiceDesc, srv)
}

func _PrimeNumberService_GetPrimeNumbers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeNumberRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PrimeNumberServiceServer).GetPrimeNumbers(m, &primeNumberServiceGetPrimeNumbersServer{stream})
}

type PrimeNumberService_GetPrimeNumbersServer interface {
	Send(*PrimeNumberResponse) error
	grpc.ServerStream
}

type primeNumberServiceGetPrimeNumbersServer struct {
	grpc.ServerStream
}

func (x *primeNumberServiceGetPrimeNumbersServer) Send(m *PrimeNumberResponse) error {
	return x.ServerStream.SendMsg(m)
}

// PrimeNumberService_ServiceDesc is the grpc.ServiceDesc for PrimeNumberService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PrimeNumberService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "greet.PrimeNumberService",
	HandlerType: (*PrimeNumberServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetPrimeNumbers",
			Handler:       _PrimeNumberService_GetPrimeNumbers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "primenumber/primenumberpb/primenumber.proto",
}
